// This file is generated by rust-protobuf 2.25.2. Do not edit
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_imports)]
#![allow(unused_results)]
//! Generated file from `pandit.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
// const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_2_25_2;

/// Extension fields
pub mod exts {

    pub const absolute_path: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::FieldOptions, ::protobuf::types::ProtobufTypeString> = ::protobuf::ext::ExtFieldOptional { field_number: 50020, phantom: ::std::marker::PhantomData };

    pub const relative_path: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::FieldOptions, ::protobuf::types::ProtobufTypeString> = ::protobuf::ext::ExtFieldOptional { field_number: 50021, phantom: ::std::marker::PhantomData };

    pub const path: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::MessageOptions, ::protobuf::types::ProtobufTypeString> = ::protobuf::ext::ExtFieldOptional { field_number: 50030, phantom: ::std::marker::PhantomData };

    pub const name: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::ServiceOptions, ::protobuf::types::ProtobufTypeString> = ::protobuf::ext::ExtFieldOptional { field_number: 50010, phantom: ::std::marker::PhantomData };
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x0cpandit.proto\x12\x06pandit\x1a\x20google/protobuf/descriptor.proto\
    :D\n\rabsolute_path\x18\xe4\x86\x03\x20\x01(\t\x12\x1d.google.protobuf.F\
    ieldOptionsR\x0cabsolutePath:D\n\rrelative_path\x18\xe5\x86\x03\x20\x01(\
    \t\x12\x1d.google.protobuf.FieldOptionsR\x0crelativePath:5\n\x04path\x18\
    \xee\x86\x03\x20\x01(\t\x12\x1f.google.protobuf.MessageOptionsR\x04path:\
    5\n\x04name\x18\xda\x86\x03\x20\x01(\t\x12\x1f.google.protobuf.ServiceOp\
    tionsR\x04nameJ\xb2\x02\n\x06\x12\x04\0\0\x0c>\n\x08\n\x01\x0c\x12\x03\0\
    \0\x12\n\t\n\x02\x03\0\x12\x03\x01\0*\n\x08\n\x01\x02\x12\x03\x03\0\x0f\
    \n\t\n\x01\x07\x12\x04\x05\0\x08\x01\n\t\n\x02\x07\0\x12\x03\x06\x02\x1f\
    \n\n\n\x03\x07\0\x02\x12\x03\x05\x07#\n\n\n\x03\x07\0\x05\x12\x03\x06\
    \x02\x08\n\n\n\x03\x07\0\x01\x12\x03\x06\t\x16\n\n\n\x03\x07\0\x03\x12\
    \x03\x06\x19\x1e\n\t\n\x02\x07\x01\x12\x03\x07\x02\x1f\n\n\n\x03\x07\x01\
    \x02\x12\x03\x05\x07#\n\n\n\x03\x07\x01\x05\x12\x03\x07\x02\x08\n\n\n\
    \x03\x07\x01\x01\x12\x03\x07\t\x16\n\n\n\x03\x07\x01\x03\x12\x03\x07\x19\
    \x1e\n\x08\n\x01\x07\x12\x03\n\0>\n\t\n\x02\x07\x02\x12\x03\n(<\n\n\n\
    \x03\x07\x02\x02\x12\x03\n\x07%\n\n\n\x03\x07\x02\x05\x12\x03\n(.\n\n\n\
    \x03\x07\x02\x01\x12\x03\n/3\n\n\n\x03\x07\x02\x03\x12\x03\n6;\n\x08\n\
    \x01\x07\x12\x03\x0c\0>\n\t\n\x02\x07\x03\x12\x03\x0c(<\n\n\n\x03\x07\
    \x03\x02\x12\x03\x0c\x07%\n\n\n\x03\x07\x03\x05\x12\x03\x0c(.\n\n\n\x03\
    \x07\x03\x01\x12\x03\x0c/3\n\n\n\x03\x07\x03\x03\x12\x03\x0c6;b\x06proto\
    3\
";

static file_descriptor_proto_lazy: ::protobuf::rt::LazyV2<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::LazyV2::INIT;

fn parse_descriptor_proto() -> ::protobuf::descriptor::FileDescriptorProto {
    ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
}

pub fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    file_descriptor_proto_lazy.get(|| {
        parse_descriptor_proto()
    })
}
